* {
  box-sizing: border-box;
}

list-item {
  height: 100%;
  width: 100%;
}

.wrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  padding: 20px;
  list-style: none;
  background-color: #fff;
  border-radius: 3px;
  transition: all 200ms;
  box-shadow: none;
  text-decoration: none;
}

.wrapper:visited {
  color: currentColor;
}

.wrapper:hover {
  box-shadow: 0 0 10px 3px rgba(255, 255, 255, 0.8);
}

.title {
  margin-top: 0;
  margin-bottom: 10px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 1.2em;
  height: 1.2em;
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.content .snap {
  position: relative;
  flex: 1;
  flex-basis: 0;
  border-radius: 3px;
  overflow: hidden;
  font-size: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.content .snap .loading {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  display: flex;
  align-items: center;
  justify-content: center;
}

.content .snap .loading .icon {
  width: 60px;
  height: 60px;
  background-image: url('../img/loading.svg');
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  animation: rotate 2000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.content .snap img {
  width: 100%;
  /* height: 100%; */
  /* object-fit: scale-down; */
}

.content .snap img.hidden {
  visibility: hidden;
}

.content .desc {
  margin-top: 0.5em;
  font-size: 14px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  line-height: 1.2em;
}

/* @supports (display: -webkit-box) and (-webkit-line-clamp: 2) and (-webkit-box-orient: vertical) {
  .content .desc {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    white-space: normal;
    height: 2.4em;
    line-height: 1.2em;
  }
} */
.none {
  display: none !important;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(-360deg);
  }
}